version: '3.3'
services:

  # nginx
  nginx:
    image: dbmi/nginx:${nginx_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    env_file:
      - ${ENV_FILE}
      - ${SECRET_FILE}
    # application stack exposed ports
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    networks:
      - open
      - closed
    volumes:
      - nginx:/etc/nginx:rw
      # nginx conf development
      - ${LOCAL_NGINX_CONF:-nginx-conf}:/etc/nginx/conf.d:rw

  dockergen:
    image: jwilder/docker-gen:latest
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    command: -notify-sighup ${COMPOSE_PROJECT_NAME}_nginx_1 -watch /etc/nginx/conf.d/nginx.tmpl /etc/nginx/conf.d/default.conf
    restart: always
    networks:
      - closed
    depends_on:
      - nginx
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx:/etc/nginx:rw
      # nginx conf development
      - ${LOCAL_NGINX_CONF:-nginx-conf}:/etc/nginx/conf.d:rw


  ## PIC-SURE API Stack ##
  # IRCT
  irct:
    image: dbmi/irct:${irct_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    depends_on:
       - nginx
    env_file:
      - ${ENV_FILE}
      - ${SECRET_FILE}
    environment:
      - PROXY=irct
      - PROXY_RULE=~ ^/rest/v1/(.*)$$
      - PROXY_PATH=/IRCT-CL/rest
      - PROXY_PORT=8080
      - PROXY_COOKIE=true
    # debug command
    command: --debug --server-config=standalone.xml
    restart: always
    networks:
      # needs to talk to DB
      - open
      - closed
    expose:
      - 8080
    ports:
      # debug port
      - 8787:8787
    volumes:
      - ${LOCAL_IRCT:-irct}:/opt/jboss/wildfly/standalone/deployments
      - ${LOCAL_IRCT_CONFIG:-irct-config}:/opt/jboss/wildfly/standalone/configuration
      - ${LOCAL_WHITELIST_CONFIG:-whitelist-config}:/whitelist

  irct-init:
    image: dbmi/irct-init:${irct_init_version}
    env_file:
      - ${ENV_FILE}
      - ${SECRET_FILE}
    networks:
      - closed
    volumes:
      - ${LOCAL_IRCT_SCRIPTS:-irct-init}:/scratch/irct/sql:rw

volumes:
    # shared volume for nginx templates
    nginx:
    nginx-conf:
    # whitelist directory
    whitelist-config:
    # default IRCT-CL.war deployment directory
    irct:
    # standalone configuraton directory
    irct-config:
    # default init scripts
    irct-init:


networks:
    open:
    closed:
        internal: true
