version: '3.3'
services:

  # nginx
  nginx:
    image: dbmi/nginx:${nginx_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    restart: always
    # application stack exposed ports
    ports:
      - ${HTTP_PORT:-80}:80
      - ${HTTPS_PORT:-443}:443
    networks:
      - public

  picsure2:
    image: dbmi/picsure2:${picsure2_version}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    depends_on:
      - nginx
      - picsuredb
    env_file:
      - ${ENV_FILE}
    networks:
      - public
    expose:
      - 8080

# PICSURE2 DB directly build from mysql for now
  picsuredb:
    image: mysql:${mysql_version}
    container_name: ${PICSURE2_MYSQLADDRESS}
    labels:
      - "edu.hms.harvard.dbmi.stack.name=${STACK_NAME}"
      - "edu.hms.harvard.dbmi.stack.env=${STACK_ENV}"
    environment:
      - MYSQL_ROOT_PASSWORD=${PICSURE2_MYSQL_ROOT_PASSWORD:-password}
      - MYSQL_DATABASE=picsure
    volumes:
      - picsure-data:/var/lib/mysql
      - ./../db/picsure2-dump-initial.sql:/docker-entrypoint-initdb.d/dump_00.sql
    command: --datadir=/mysql/data
    restart: always
    expose:
      - 3306
    #ports:
    #  - ${DOCKER_PICSURE2_DB_PORT:-3306}:3306
    networks:
      - public

networks:
    public:

volumes:
    picsure-data:
